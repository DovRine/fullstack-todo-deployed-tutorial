version: '3'
services:
  frontend:
    container_name: todo-frontend-prod
    build: 
      context: ./frontend
      dockerfile: Dockerfile.prod
    expose:
      - 80

  backend:
    container_name: todo-backend-prod
    build:
      context: .
      dockerfile: ./backend/Dockerfile.prod
    expose:
      - 8000

  db:
    container_name: todo-db
    image: postgres:latest
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    expose:
      - ${DB_PORT}
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DB}
      DB_PORT: ${DB_PORT}

  proxy:
    image: nginx:latest
    container_name: todo-proxy-prod
    expose:
      - 80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    environment:
      VIRTUAL_HOST: todo-tutorial.rine.us
      LETSENCRYPT_HOST: todo-tutorial.rine.us

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_proxy_certs:/etc/nginx/certs
      - nginx_proxy_vhost.d:/etc/nginx/vhost.d
      - nginx_proxy_html:/usr/share/nginx/html

  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-letsencrypt
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx_proxy_certs:/etc/nginx/certs
      - nginx_proxy_vhost.d:/etc/nginx/vhost.d
      - nginx_proxy_html:/usr/share/nginx/html
    environment:
      DEFAULT_EMAIL: dov.rine@gmail.com
      NGINX_PROXY_CONTAINER: nginx-proxy

volumes:
  db_data:
  nginx_proxy_certs:
  nginx_proxy_vhost.d:
  nginx_proxy_html: